{"version":3,"sources":["assets/jobbot.png","assets/DevChat.png","assets/PaperTrader.png","assets/holeitw.png","assets/Headshot.png","contexts/VisibilityContext.js","contexts/WindowContext.js","listeners/useWindowSize.js","Projects.js","About.js","MainContent.js","NavBar.js","LandingPage.js","HamburgerMenu.js","PageContainer.js","App.js","index.js"],"names":["module","exports","VisibilityContext","createContext","VisibilityContextProvider","props","useState","projectSelected","toggleProjectSelected","navBarVisible","toggleNavBarVisible","Provider","value","handleNavbarVisibility","handleAboutClick","handleProjectClick","children","WindowContext","WindowContextProvider","size","isClient","window","getSize","width","innerWidth","undefined","height","innerHeight","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","useWindowSize","changeWindowSize","Projects","updateProject","index","projects","title","description","technologies","link","githubRepo","image","setState","formatTechnologies","devChat","mobileFriendly","jobbot","paperTrader","holeitw","tech","updatedTech","i","length","push","Label","color","key","handlePointerRightClick","state","currentProjectIndex","endOfProjects","beginningOfProjects","handlePointerLeftClick","onSwiping","dir","first","LEFT","RIGHT","this","leftArrow","Icon","className","name","disabled","onClick","rightArrow","eventData","trackMouse","preventDefaultTouchmoveEvent","Grid","stackable","Row","Column","verticalAlign","only","Image","src","rounded","bordered","Container","Header","as","href","target","rel","includes","Component","About","reversed","id","MainContent","useContext","NavBar","projectStyles","aboutStyles","backgroundColor","borderRadius","style","LandingPage","Fragment","headshot","textAlign","HamburgerMenu","navbarVisible","visible","toggleVisible","Sidebar","Pushable","Menu","animation","icon","onHide","vertical","direction","Item","Pusher","dimmed","PageContainer","nav","App","content","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5110932.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/jobbot.bd951800.png\";","module.exports = __webpack_public_path__ + \"static/media/DevChat.4a7516d1.png\";","module.exports = __webpack_public_path__ + \"static/media/PaperTrader.aa933a9c.png\";","module.exports = __webpack_public_path__ + \"static/media/holeitw.6b6ef7c4.png\";","module.exports = __webpack_public_path__ + \"static/media/Headshot.e00f57c3.png\";","import React, { createContext, useState } from 'react';\n\nexport const VisibilityContext = createContext();\n\nconst VisibilityContextProvider = (props) => {\n  const [projectSelected, toggleProjectSelected] = useState(false);\n  const [navBarVisible, toggleNavBarVisible] = useState(false);\n\n  const handleNavbarVisibility = () => {\n    toggleNavBarVisible(!navBarVisible);\n  }\n\n  const handleAboutClick = () => {\n    toggleProjectSelected(false);\n    toggleNavBarVisible(true);\n  }\n\n  const handleProjectClick = () => {\n    toggleProjectSelected(true);\n    toggleNavBarVisible(true);\n  }\n\n  return (\n    <VisibilityContext.Provider value={{projectSelected, navBarVisible, handleNavbarVisibility, handleAboutClick, handleProjectClick }}>\n      {props.children}\n    </VisibilityContext.Provider>\n  )\n}\n\nexport default VisibilityContextProvider\n","import React, { createContext, useState, useEffect } from 'react';\nimport { useWindowSize } from '../listeners/useWindowSize';\n\nexport const WindowContext = createContext();\n\nconst WindowContextProvider = (props) => {\n  const size = useWindowSize();\n\n  const [windowSize, changeWindowSize] = useState(size);\n\n  useEffect(() => {\n    changeWindowSize(size);\n  }, [size])\n\n  return (\n    <WindowContext.Provider value={{ windowSize }}>\n      {props.children}\n    </WindowContext.Provider>\n  )\n}\n\nexport default WindowContextProvider\n\n","import { useState, useEffect } from 'react';\n\nexport function useWindowSize() {\n  const isClient = typeof window === 'object';\n\n  function getSize() {\n    return {\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined\n    };\n  }\n\n  const [windowSize, setWindowSize] = useState(getSize);\n\n  useEffect(() => {\n    if (!isClient) {\n      return false;\n    }\n\n    function handleResize() {\n      setWindowSize(getSize());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n\n  return windowSize;\n}","import React,{ Component } from 'react';\nimport { Swipeable, LEFT, RIGHT } from 'react-swipeable';\n\nimport { Grid, Image, Icon, Header, Container, Label} from 'semantic-ui-react';\n\nimport jobbot from './assets/jobbot.png';\nimport devChat from './assets/DevChat.png';\nimport paperTrader from './assets/PaperTrader.png';\nimport holeitw from './assets/holeitw.png';\n\nclass Projects extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: \"\",\n      description: \"\",\n      technologies: [],\n      link: \"\",\n      githubRepo: \"\",\n      image: null,\n      currentProjectIndex: 0,\n      beginningOfProjects: true,\n      endOfProjects: false,\n      windowSize: this.props.windowSize\n    };\n  }\n\n  componentDidMount() {\n    this.updateProject(0);\n  }\n\n  updateProject = index => {\n    const {\n      title,\n      description,\n      technologies,\n      link,\n      githubRepo,\n      image\n    } = this.projects[index];\n\n    this.setState({\n      title,\n      description,\n      technologies: this.formatTechnologies(technologies),\n      link,\n      githubRepo,\n      image\n    });\n  };\n\n  projects = [\n    {\n      title: \"DevChat\",\n      description:\n        \"This is a slack clone I made to practice React and Redux. I used Firebase for authentication, database, and deployment. To avoid signing up you can use email: Test@test.com and password: Qwerty\",\n      technologies: [\"React\", \"Redux\", \"Firebase\", \"Semantic UI\"],\n      link: \"https://slack-6f481.firebaseapp.com/\",\n      githubRepo: \"https://github.com/mabry1985/DevChat\",\n      image: devChat,\n      mobileFriendly: true\n    },\n    {\n      title: \"jobBot\",\n      description:\n        \"This is a dashboard I made to render the data scraped using my JobBot webcrawler. The crawler currently scrapes four job boards and collects the data in a Mongo Atlas database. Links to both the webcrawler and server can be found in the README for this project.\",\n      technologies: [\n        \"React\",\n        \"Mongoose\",\n        \"Express\",\n        \"Node\",\n        \"D3\",\n        \"Heroku\",\n        \"Styled Components\"\n      ],\n      link: \"https://jobbot-dashboard.herokuapp.com\",\n      githubRepo: \"https://github.com/mabry1985/jobBot-dashboard\",\n      image: jobbot,\n      mobileFriendly: true\n    },\n    {\n      title: \"Paper Trader\",\n      description:\n        \"This is a Ruby on Rails application that was built in three days by me and three fellow students at Epicodus for our team-week project. I built out the functionality for user authentication, interacted with the API, and manipulated that data. I also was in charge of deployment to Heroku\",\n      technologies: [\"Ruby\", \"Rails\", \"PSQL\", \"Heroku\", \"Chart.js\"],\n      link: \"http://floating-scrubland-71604.herokuapp.com/\",\n      githubRepo: \"https://github.com/mabry1985/paper_trader\",\n      image: paperTrader,\n      mobileFriendly: false\n    },\n    {\n      title: \"Hole in the Wall\",\n      description:\n        \"This is an experimental app I made for my capstone at Epicodus, using React and Redux. My main goal was to create a pleasant interface that functioned like a native app and to eventually port it over to an Electron or VR app.\",\n      technologies: [\"React\", \"Redux\", \"Firebase\"],\n      link: \"\",\n      githubRepo: \"https://github.com/mabry1985/hole-in-the-wall.git\",\n      image: holeitw,\n      mobileFriendly: false\n    }\n  ];\n\n  formatTechnologies = tech => {\n    let updatedTech = [];\n    for (let i = 0; i < tech.length; i++) {\n      updatedTech.push(<Label color='teal' key={tech[i]}>{tech[i]}</Label>);\n    }\n    return updatedTech;\n  };\n\n  handlePointerRightClick = () => {\n    let index = this.state.currentProjectIndex;\n      index += 1;\n    if (index >= this.projects.length - 1) {\n      this.setState({\n        currentProjectIndex: index,\n        endOfProjects: true,\n        beginningOfProjects: false\n      });\n      this.updateProject(index);\n    } else {\n      this.setState({\n        currentProjectIndex: index,\n        endOfProjects: false,\n        beginningOfProjects: false\n      });\n      this.updateProject(index);\n    }\n  };\n\n  handlePointerLeftClick = () => {\n    let index = this.state.currentProjectIndex;\n      index -= 1;\n    if (index === 0) {\n      this.setState({\n        currentProjectIndex: index,\n        beginningOfProjects: true,\n        endOfProjects: false\n      });\n      this.updateProject(index);\n    } else {\n      this.setState({\n        currentProjectIndex: index,\n        beginningOfProjects: false,\n        endOfProjects: false\n      });\n      this.updateProject(index);\n    }\n  };\n\n  onSwiping = ({ dir, first }) => {\n    let index = this.state.currentProjectIndex;\n    if (first && dir === LEFT && index < this.projects.length - 1) {\n      this.handlePointerRightClick();\n    } \n    if (first && dir === RIGHT && index > 0) {\n      this.handlePointerLeftClick();\n    }\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      technologies,\n      link,\n      githubRepo,\n      image,\n      beginningOfProjects,\n      endOfProjects,\n      windowSize,\n      currentProjectIndex\n    } = this.state;\n\n    const leftArrow = (\n      <Icon\n        size=\"big\"\n        className=\"project-arrows\"\n        name=\"caret square left outline\"\n        disabled={beginningOfProjects}\n        onClick={this.handlePointerLeftClick}\n      />\n    );\n\n    const rightArrow = (\n      <Icon\n        size=\"big\"\n        className=\"project-arrows\"\n        name=\"caret square right outline\"\n        onClick={this.handlePointerRightClick}\n        disabled={endOfProjects}\n      />\n    );\n\n    return (\n      <Swipeable\n        onSwiping={eventData => this.onSwiping(eventData)}\n        trackMouse={false}\n        preventDefaultTouchmoveEvent={true}\n      >\n        <div className=\"projects\">\n          {windowSize.width < 500 ? (\n            <p className=\"swipe-info\">Swipe to change project</p>\n          ) : null}\n\n          <Grid stackable>\n            <Grid.Row>\n              <Grid.Column verticalAlign=\"middle\" width={1} only=\"computer\">\n                {leftArrow}\n              </Grid.Column>\n              <Grid.Column width={10}>\n                <Image src={image} rounded bordered />\n                {windowSize.width < 500 ? \n                  <p className=\"swipe-count\">\n                    {currentProjectIndex + 1} / {this.projects.length}\n                  </p>\n                  : null\n                }\n\n              </Grid.Column>\n              <Grid.Column verticalAlign=\"middle\" width={4}>\n                <Container className=\"project-container\">\n                  <Header as=\"h2\" className=\"project-title\">\n                    {title}\n                  </Header>\n                  <p>{description}</p>\n\n                  {technologies}\n\n                  {windowSize.width > 766 ? (\n                    <div className=\"project-links\">\n                      {link && (\n                      <Header as=\"h4\">\n                        <a\n                          href={link}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          Demo Site\n                        </a>\n                        {link.includes(\"heroku\") ? (\n                          <p>\n                            (This site is hosted on Heroku and may take a little\n                            while to load)\n                          </p>\n                        ) : null}\n                      </Header>\n                      )}\n                      <Header as=\"h4\">\n                        <a\n                          href={githubRepo}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          Github Repo\n                        </a>\n                      </Header>\n                    </div>\n                  ) : null}\n                </Container>\n              </Grid.Column>\n              <Grid.Column verticalAlign=\"middle\" width={1} only=\"computer\">\n                {rightArrow}\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </div>\n      </Swipeable>\n    );\n  }\n}\n\nexport default Projects\n","import React from 'react'\nimport { Grid, Container, Header } from \"semantic-ui-react\";\n\nconst About = () => {\n  return (\n    <Grid stackable reversed={true} >\n      <Grid.Row verticalAlign='top'>\n        <Grid.Column width={10}>\n          <Container>\n            <h3 id='about-header'>About Me</h3>\n            <p className='about'>\n              I was a bartender off and on for the last 12 years at a busy downtown\n              bar where I developed strong interpersonal skills and managed a team\n              of bartenders in a fast paced and, at times, chaotic environment .\n              Recently I spent 4 years running my own woodworking business where I\n              designed, built, and sold household goods. I learned the craft through\n              ADX, a local maker space, where I had the pleasure to learn from and\n              work with many talented people and eventually began to create and\n              teach classes of my own. I eventually decided that running my own\n              business wasn't what I wanted to do and enrolled in Epicodus' coding\n              bootcamp to learn how to develop software. I would say that my only\n              regret now is that I hadn't started coding sooner! I absolutely love\n              the problem solving and seemingly infinite pool of things to learn and\n              can't wait to see where this next chapter of my life takes me.\n            </p>\n          </Container>\n        </Grid.Column>\n        <Grid.Column only='tablet computer'>\n\n        </Grid.Column>\n  \n        <Grid.Column width={3} verticalAlign='middle'>\n          <Container>\n          <a\n            href=\"https://drive.google.com/file/d/15X8GmKS3durO2wB7yS5FmdBYmJld7srU/view?usp=sharing\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <h3 className=\"links resume\">Resume</h3>\n          </a>\n          <a href=\"mailto:mabrycodes@gmail.com\">\n            <h3 className=\"links email\">Email</h3>\n          </a>\n            <a href=\"https://www.github.com/mabry1985\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <h3 className=\"links github\">Github</h3>\n          </a>\n            <a href=\"https://www.linkedin.com/in/mabry1985/\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <h3 className=\"links linked-in\">Linked In</h3>\n          </a>\n            <a href=\"https://www.codewars.com/users/mabry1985\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <h3 className=\"links codewars\">Codewars</h3>\n          </a>\n          </Container>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n}\n\nexport default About\n","import React, { useContext } from 'react'\n\nimport { VisibilityContext } from './contexts/VisibilityContext';\nimport { WindowContext } from './contexts/WindowContext';\n\nimport Projects from './Projects';\nimport About from './About';\n\nconst MainContent = () => {\n  const { projectSelected } = useContext(VisibilityContext)\n  const { windowSize } = useContext(WindowContext);\n  const size = windowSize;\n  \n  return (\n    <div id=\"main-content\">\n      {projectSelected ? <Projects windowSize={size}/> : <About/>}\n    </div>\n  )\n}\n\nexport default MainContent\n","import React, { useContext } from 'react';\nimport { VisibilityContext } from './contexts/VisibilityContext';\nimport MainContent from './MainContent';\n\nconst NavBar = () => {\n  const { handleProjectClick, handleAboutClick, handleNavbarVisibility, projectSelected } = useContext(VisibilityContext);\n  let projectStyles = {};\n  let aboutStyles = {};\n\n  if (projectSelected === true) {\n    projectStyles = {\n      backgroundColor: '#E6F4FA',\n      borderRadius: '15px',\n    }\n    aboutStyles = {}\n  } else {\n    aboutStyles = {\n      backgroundColor: '#E6F4FA',\n      borderRadius: '15px',\n    }\n    projectStyles = {}\n  }\n\n  return (\n    <div>\n      <div className=\"main\">\n        <div id=\"nav\">\n          <h5 id=\"name-nav\"\n            onClick={() => handleNavbarVisibility()}>Josh Mabry</h5>\n          <ul>\n            <li style={aboutStyles}\n              id=\"about-nav\"\n              onClick={() => handleAboutClick()}>\n              About\n            </li>\n            <li style={projectStyles}\n              id=\"projects-nav\"\n              onClick={() => handleProjectClick()}>\n              Projects\n            </li>\n          </ul>\n        </div>\n        <MainContent/>\n      </div>\n    </div>\n  )\n}\n\nexport default NavBar;\n\n","import React, { useContext } from 'react';\nimport { Grid, Container, Image, Header } from 'semantic-ui-react';\n\nimport { VisibilityContext } from './contexts/VisibilityContext';\n\nimport headshot from './assets/Headshot.png';\n\nconst LandingPage = () => {\n  const { handleProjectClick, handleAboutClick } = useContext(VisibilityContext);\n  \n  return (\n    <React.Fragment>\n      <Grid stackable reversed='mobile'>\n        <Grid.Row>\n          <Grid.Column width={8}>\n            <div className=\"img-container\">\n              <Image className=\"headshot\" src={headshot} />\n            </div>\n          </Grid.Column>\n          <Grid.Column verticalAlign=\"middle\" textAlign=\"center\" width={8}>\n            <Container>\n              <Grid.Row>\n                <Header as=\"h1\" id=\"name\">\n                  Josh Mabry\n                </Header>\n                <Header as=\"h3\" id=\"subtitle\">\n                  Fullstack Web Developer\n                </Header>\n              </Grid.Row>\n              <Grid.Row only='computer tablet' id=\"links-container\">\n                <Header\n                  as=\"h3\"\n                  className=\"lp-links projects-lp\"\n                  onClick={handleProjectClick}\n                >\n                  Projects\n                </Header>\n                <Header\n                  as=\"h3\"\n                  className=\"lp-links about-lp\"\n                  onClick={handleAboutClick}\n                >\n                  About\n                </Header>\n              </Grid.Row>\n            </Container>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default LandingPage\n","import React, { useState, useContext } from 'react';\nimport { Icon, Menu, Sidebar } from 'semantic-ui-react';\nimport { VisibilityContext } from './contexts/VisibilityContext';\nimport MainContent from './MainContent';\nimport LandingPage from './LandingPage';\n\nconst HamburgerMenu = () => {\n  const { navbarVisible, handleProjectClick, handleAboutClick, handleNavbarVisibility} = useContext(VisibilityContext)\n  const [visible, toggleVisible] = useState(false);\n\n  return (\n    <div>\n      <nav>\n        <Icon\n          id=\"hamburger-icon\"\n          name=\"sidebar\"\n          size=\"big\"\n          onClick={() => toggleVisible(true)}\n        />\n      </nav>\n\n      <Sidebar.Pushable as=\"div\">\n        <Sidebar\n          className=\"hamburger-menu\"\n          as={Menu}\n          animation=\"overlay\"\n          icon=\"labeled\"\n          onHide={() => toggleVisible(false)}\n          vertical\n          direction=\"right\"\n          visible={visible}\n          width=\"thin\"\n        >\n          <Menu.Item as=\"a\" onClick={() => handleProjectClick()}>\n            <h3 className=\"hamburger-links\">Projects</h3>\n          </Menu.Item>\n          <Menu.Item as=\"a\" onClick={() => handleAboutClick()}>\n            <h3 className=\"hamburger-links\">About</h3>\n          </Menu.Item>\n          <Menu.Item\n            as=\"a\"\n            href=\"https://drive.google.com/file/d/15X8GmKS3durO2wB7yS5FmdBYmJld7srU/view?usp=sharing\"\n            target=\"_blank\"\n          >\n            <h3 className=\"hamburger-links\">Resume</h3>\n          </Menu.Item>\n          <Menu.Item\n            as=\"a\"\n            href=\"https://www.github.com/mabry1985\"\n            target=\"_blank\"\n          >\n            <h3 className=\"hamburger-links\">Github</h3>\n          </Menu.Item>\n          <Menu.Item\n            as=\"a\"\n            href='https://www.linkedin.com/in/mabry1985/'\n            target=\"_blank\"\n          >\n            <h3 className=\"hamburger-links\">LinkedIn</h3>\n          </Menu.Item>\n          <Menu.Item as=\"a\" onClick={() => handleNavbarVisibility()}>\n            <h3 className=\"hamburger-links\">Home</h3>\n          </Menu.Item>\n        </Sidebar>\n\n        <Sidebar.Pusher className=\"hamburger-container\" dimmed={visible}>\n          {navbarVisible ? <LandingPage /> : <MainContent />}\n        </Sidebar.Pusher>\n      </Sidebar.Pushable>\n    </div>\n  );\n}\n\nexport default HamburgerMenu\n","import React, { useContext } from 'react';\nimport NavBar from './NavBar';\nimport { WindowContext } from './contexts/WindowContext';\nimport HamburgerMenu from './HamburgerMenu';\n\nconst PageContainer = () => {\n  const { windowSize } = useContext(WindowContext);\n  \n  const nav = windowSize.width > 500 ? <NavBar/> : <HamburgerMenu/>;\n\n  return (\n    <div>\n      {nav}\n    </div>\n  )\n}\n\nexport default PageContainer\n\n","import React, { useContext } from 'react';\n\nimport NavBar from './PageContainer';\nimport LandingPage from './LandingPage';\nimport { VisibilityContext } from './contexts/VisibilityContext';\n\nconst App = () => {\n  const { navBarVisible } = useContext(VisibilityContext);\n\n  let content;\n  \nif (navBarVisible === true) {\n    content = <NavBar/>\n  } else {\n    content = <LandingPage/>\n  }\n\n  return (\n    <div className=\"App\">\n      {content}\n    </div>\n  )\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport VisibilityContextProvider from './contexts/VisibilityContext';\nimport WindowContextProvider from './contexts/WindowContext';\n\nReactDOM.render(\n  <VisibilityContextProvider>\n    <WindowContextProvider>\n      <App /> \n    </WindowContextProvider>\n  </VisibilityContextProvider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}