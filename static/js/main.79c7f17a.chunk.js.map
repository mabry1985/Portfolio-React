{"version":3,"sources":["assets/jobbot.png","assets/DevChat.png","assets/PaperTrader.png","assets/holeitw.png","assets/Headshot.png","contexts/VisibilityContext.js","components/navigation/NavBar.js","contexts/WindowContext.js","listeners/useWindowSize.js","components/projects/projectList.js","components/projects/Projects.js","components/About.js","components/MainContent.js","components/LandingPage.js","components/navigation/HamburgerMenu.js","components/navigation/ResponsiveNav.js","components/responsive/LandscapeMode.js","App.js","index.js"],"names":["module","exports","VisibilityContext","createContext","VisibilityContextProvider","props","useState","projectSelected","toggleProjectSelected","navBarVisible","toggleNavBarVisible","Provider","value","handleNavbarVisibility","handleAboutClick","handleProjectClick","children","NavBar","useContext","projectStyles","aboutStyles","backgroundColor","borderRadius","id","onClick","style","WindowContext","WindowContextProvider","size","isClient","window","getSize","width","innerWidth","undefined","height","innerHeight","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","useWindowSize","changeWindowSize","landscapeMode","toggleLandscape","handleLandscapeToggle","projectList","title","description","technologies","link","githubRepo","image","devChat","mobileFriendly","jobbot","paperTrader","holeitw","Projects","updateProject","index","setState","formatTechnologies","tech","updatedTech","i","length","push","Label","className","color","key","handlePointerRightClick","state","currentProjectIndex","endOfProjects","beginningOfProjects","handlePointerLeftClick","onSwiping","dir","first","LEFT","RIGHT","this","eventData","trackMouse","preventDefaultTouchmoveEvent","Header","as","dividing","Grid","stackable","Row","Column","verticalAlign","only","Icon","name","disabled","Image","src","rounded","bordered","Container","href","target","rel","includes","Component","About","reversed","MainContent","LandingPage","Fragment","headshot","textAlign","HamburgerMenu","navbarVisible","visible","toggleVisible","Sidebar","Pushable","Menu","animation","icon","onHide","vertical","direction","Item","Pusher","dimmed","ResponsiveNav","nav","LandscapeMode","App","content","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79c7f17a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/jobbot.bd951800.png\";","module.exports = __webpack_public_path__ + \"static/media/DevChat.4a7516d1.png\";","module.exports = __webpack_public_path__ + \"static/media/PaperTrader.aa933a9c.png\";","module.exports = __webpack_public_path__ + \"static/media/holeitw.6b6ef7c4.png\";","module.exports = __webpack_public_path__ + \"static/media/Headshot.e00f57c3.png\";","import React, { createContext, useState } from 'react';\n\nexport const VisibilityContext = createContext();\n\nconst VisibilityContextProvider = (props) => {\n  const [projectSelected, toggleProjectSelected] = useState(false);\n  const [navBarVisible, toggleNavBarVisible] = useState(false);\n\n  const handleNavbarVisibility = () => {\n    toggleNavBarVisible(!navBarVisible);\n  }\n\n  const handleAboutClick = () => {\n    toggleProjectSelected(false);\n    toggleNavBarVisible(true);\n  }\n\n  const handleProjectClick = () => {\n    toggleProjectSelected(true);\n    toggleNavBarVisible(true);\n  }\n\n  return (\n    <VisibilityContext.Provider value={{projectSelected, navBarVisible, handleNavbarVisibility, handleAboutClick, handleProjectClick }}>\n      {props.children}\n    </VisibilityContext.Provider>\n  )\n}\n\nexport default VisibilityContextProvider\n","import React, { useContext } from 'react';\nimport { VisibilityContext } from '../../contexts/VisibilityContext';\n\nconst NavBar = () => {\n  const { handleProjectClick, handleAboutClick, handleNavbarVisibility, projectSelected } = useContext(VisibilityContext);\n  let projectStyles = {};\n  let aboutStyles = {};\n\n  if (projectSelected === true) {\n    projectStyles = {\n      backgroundColor: '#E6F4FA',\n      borderRadius: '15px',\n    }\n    aboutStyles = {}\n  } else {\n    aboutStyles = {\n      backgroundColor: '#E6F4FA',\n      borderRadius: '15px',\n    }\n    projectStyles = {}\n  }\n\n  return (\n    <nav id=\"nav\">\n      <h5 id=\"name-nav\"\n        onClick={() => handleNavbarVisibility()}>Josh Mabry</h5>\n      <ul>\n        <li style={aboutStyles}\n          id=\"about-nav\"\n          onClick={() => handleAboutClick()}>\n          About\n        </li>\n        <li style={projectStyles}\n          id=\"projects-nav\"\n          onClick={() => handleProjectClick()}>\n          Projects\n        </li>\n      </ul>\n    </nav>\n  )\n}\n\nexport default NavBar;\n\n","import React, { createContext, useState, useEffect } from 'react';\nimport { useWindowSize } from '../listeners/useWindowSize';\n\nexport const WindowContext = createContext();\n\nconst WindowContextProvider = (props) => {\n  const size = useWindowSize();\n\n  const [windowSize, changeWindowSize] = useState(size);\n  const [landscapeMode, toggleLandscape] = useState(false);\n\n  useEffect(() => {\n    changeWindowSize(size);\n    toggleLandscape(handleLandscapeToggle(size));\n  }, [size])\n\n  const handleLandscapeToggle = (size) =>{\n    if (size.width > size.height && size.height < 766) {\n      return true;\n    } else if (size.width < size.height && size.width < 766) {\n      return false;\n    }\n  }\n\n  return (\n    <WindowContext.Provider value={{ windowSize, landscapeMode }}>\n      {props.children}\n    </WindowContext.Provider>\n  );\n}\n\nexport default WindowContextProvider\n\n","import { useState, useEffect } from 'react';\n\nexport function useWindowSize() {\n  const isClient = typeof window === 'object';\n\n  function getSize() {\n    return {\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined\n    };\n  }\n\n  const [windowSize, setWindowSize] = useState(getSize);\n\n  useEffect(() => {\n    if (!isClient) {\n      return false;\n    }\n\n    function handleResize() {\n      setWindowSize(getSize());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowSize;\n}","import jobbot from '../../assets/jobbot.png';\nimport devChat from '../../assets/DevChat.png';\nimport paperTrader from '../../assets/PaperTrader.png';\nimport holeitw from '../../assets/holeitw.png';\n\n  export const projectList = [\n    {\n      title: \"DevChat\",\n      description:\n        \"This is a slack clone I made to practice React and Redux. I used Firebase for authentication, database, and deployment. To avoid signing up you can use email: Test@test.com and password: Qwerty\",\n      technologies: [\"React\", \"Redux\", \"Firebase\", \"Semantic UI\"],\n      link: \"https://slack-6f481.firebaseapp.com/\",\n      githubRepo: \"https://github.com/mabry1985/DevChat\",\n      image: devChat,\n      mobileFriendly: true\n    },\n    {\n      title: \"jobBot\",\n      description:\n        \"This is a dashboard I made to render the data scraped using my JobBot webcrawler. The crawler currently scrapes four job boards and collects the data in a Mongo Atlas database. Links to both the webcrawler and server can be found in the README for this project.\",\n      technologies: [\n        \"React\",\n        \"Mongoose\",\n        \"Express\",\n        \"Node\",\n        \"D3\",\n        \"Heroku\",\n        \"Styled Components\"\n      ],\n      link: \"https://jobbot-dashboard.herokuapp.com\",\n      githubRepo: \"https://github.com/mabry1985/jobBot-dashboard\",\n      image: jobbot,\n      mobileFriendly: true\n    },\n    {\n      title: \"Paper Trader\",\n      description:\n        \"This is a Ruby on Rails application that was built in three days by me and three fellow students at Epicodus for our team-week project. I built out the functionality for user authentication, interacted with the API, and manipulated that data. I also was in charge of deployment to Heroku\",\n      technologies: [\"Ruby\", \"Rails\", \"PSQL\", \"Heroku\", \"Chart.js\"],\n      link: \"http://floating-scrubland-71604.herokuapp.com/\",\n      githubRepo: \"https://github.com/mabry1985/paper_trader\",\n      image: paperTrader,\n      mobileFriendly: false\n    },\n    {\n      title: \"Hole in the Wall\",\n      description:\n        \"This is an experimental app I made for my capstone at Epicodus, using React and Redux. My main goal was to create a pleasant interface that functioned like a native app and to eventually port it over to an Electron or VR app.\",\n      technologies: [\"React\", \"Redux\", \"Firebase\"],\n      link: \"\",\n      githubRepo: \"https://github.com/mabry1985/hole-in-the-wall.git\",\n      image: holeitw,\n      mobileFriendly: false\n    }\n  ];","import React,{ Component } from 'react';\nimport { Swipeable, LEFT, RIGHT } from 'react-swipeable';\nimport { Grid, Image, Icon, Header, Container, Label} from 'semantic-ui-react';\nimport { projectList } from './projectList';\n\nclass Projects extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: \"\",\n      description: \"\",\n      technologies: [],\n      link: \"\",\n      githubRepo: \"\",\n      image: null,\n      currentProjectIndex: 0,\n      beginningOfProjects: true,\n      endOfProjects: false,\n      windowSize: this.props.windowSize\n    };\n  }\n\n  componentDidMount() {\n    this.updateProject(0);\n  }\n\n  updateProject = index => {\n    const {\n      title,\n      description,\n      technologies,\n      link,\n      githubRepo,\n      image\n    } = projectList[index];\n\n    this.setState({\n      title,\n      description,\n      technologies: this.formatTechnologies(technologies),\n      link,\n      githubRepo,\n      image\n    });\n  };\n\n  formatTechnologies = tech => {\n    let updatedTech = [];\n    for (let i = 0; i < tech.length; i++) {\n      updatedTech.push(\n        <Label className='tech-labels' color='teal' key={tech[i]}>{tech[i]}</Label>\n      );\n    }\n    return updatedTech;\n  };\n\n  handlePointerRightClick = () => {\n    let index = this.state.currentProjectIndex;\n      index += 1;\n    if (index >= projectList.length - 1) {\n      this.setState({\n        currentProjectIndex: index,\n        endOfProjects: true,\n        beginningOfProjects: false\n      });\n      this.updateProject(index);\n    } else {\n      this.setState({\n        currentProjectIndex: index,\n        endOfProjects: false,\n        beginningOfProjects: false\n      });\n      this.updateProject(index);\n    }\n  };\n\n  handlePointerLeftClick = () => {\n    let index = this.state.currentProjectIndex;\n      index -= 1;\n    if (index === 0) {\n      this.setState({\n        currentProjectIndex: index,\n        beginningOfProjects: true,\n        endOfProjects: false\n      });\n      this.updateProject(index);\n    } else {\n      this.setState({\n        currentProjectIndex: index,\n        beginningOfProjects: false,\n        endOfProjects: false\n      });\n      this.updateProject(index);\n    }\n  };\n\n  onSwiping = ({ dir, first }) => {\n    let index = this.state.currentProjectIndex;\n    if (first && dir === LEFT && index < projectList.length - 1) {\n      this.handlePointerRightClick();\n    } \n    if (first && dir === RIGHT && index > 0) {\n      this.handlePointerLeftClick();\n    }\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      technologies,\n      link,\n      githubRepo,\n      image,\n      beginningOfProjects,\n      endOfProjects,\n      windowSize,\n      currentProjectIndex\n    } = this.state;\n\n    return (\n      <Swipeable\n        onSwiping={eventData => this.onSwiping(eventData)}\n        trackMouse={false}\n        preventDefaultTouchmoveEvent={false}\n      >\n        <div className=\"projects\">\n          {windowSize.width < 500 ? (\n            <Header as=\"h5\" id=\"swipe-info\" dividing>\n              Swipe to change project\n            </Header>\n          ) : null}\n\n          <Grid stackable>\n            <Grid.Row>\n              <Grid.Column verticalAlign=\"middle\" width={1} only=\"computer\">\n                <Icon\n                  size=\"big\"\n                  className=\"project-arrows\"\n                  name=\"caret square left outline\"\n                  disabled={beginningOfProjects}\n                  onClick={this.handlePointerLeftClick}\n                />\n              </Grid.Column>\n              <Grid.Column width={10}>\n                <Image src={image} rounded bordered />\n                {windowSize.width < 500 ? (\n                  <p className=\"swipe-count\">\n                    {currentProjectIndex + 1} / {projectList.length}\n                  </p>\n                ) : null}\n              </Grid.Column>\n              <Grid.Column\n                id=\"project-description-column\"\n                verticalAlign=\"middle\"\n                width={4}\n              >\n                <Container className=\"project-container\">\n                  <a\n                    href={githubRepo}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <Header as=\"h2\" className=\"project-title\">\n                      {title}\n                    </Header>\n                  </a>\n                  <p>{description}</p>\n\n                  {technologies}\n\n                  {windowSize.width > 766 ? (\n                    <div className=\"project-links\">\n                      {link && (\n                        <Header as=\"h4\">\n                          <a\n                            href={link}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                          >\n                            Demo Site\n                          </a>\n                          {link.includes(\"heroku\") ? (\n                            <p>\n                              (This site is hosted on Heroku and may take a\n                              little while to load)\n                            </p>\n                          ) : null}\n                        </Header>\n                      )}\n                      <Header as=\"h4\">\n                        <a\n                          href={githubRepo}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          Github Repo\n                        </a>\n                      </Header>\n                    </div>\n                  ) : null}\n                </Container>\n              </Grid.Column>\n              <Grid.Column verticalAlign=\"middle\" width={1} only=\"computer\">\n                <Icon\n                  size=\"big\"\n                  className=\"project-arrows\"\n                  name=\"caret square right outline\"\n                  onClick={this.handlePointerRightClick}\n                  disabled={endOfProjects}\n                />\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </div>\n      </Swipeable>\n    );\n  }\n}\n\nexport default Projects\n","import React from 'react'\nimport { Grid, Container, Header } from \"semantic-ui-react\";\n\nconst About = () => {\n  return (\n    <Grid stackable reversed={true}>\n      <Grid.Row verticalAlign=\"top\">\n        <Grid.Column width={10}>\n          <Container>\n            <Header as=\"h3\" id=\"about-header\" dividing>\n              About Me\n            </Header>\n            <p id=\"about\">\n              I was a bartender off and on for the last 12 years at a busy\n              downtown bar where I managed a team of bartenders in a fast paced\n              environment. Recently I spent 4 years running my own woodworking\n              business where I designed, built, and sold household goods. I\n              learned the craft through ADX, a local maker space, where I had\n              the pleasure to learn from and work with many talented people and\n              eventually began to create and teach classes of my own. I\n              eventually decided that retail wasn't what I wanted to do and\n              after playing around with some Python online, I discovered that I\n              loved the problem solving and seemingly infinite pool of things to\n              learn. So after some research I decided to enroll in Epicodus’\n              Ruby on Rails and React bootcamp. It was a fun and challenging\n              experience and I’m excited to take this new found passion and\n              build upon the solid foundation that I've laid down.\n            </p>\n          </Container>\n        </Grid.Column>\n        <Grid.Column only=\"tablet computer\"></Grid.Column>\n\n        <Grid.Column width={3} verticalAlign=\"middle\">\n          <Container>\n            <a\n              href=\"https://drive.google.com/file/d/15X8GmKS3durO2wB7yS5FmdBYmJld7srU/view?usp=sharing\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <h3 className=\"links resume\">Resume</h3>\n            </a>\n            <a href=\"mailto:mabrycodes@gmail.com\">\n              <h3 className=\"links email\">Email</h3>\n            </a>\n            <a\n              href=\"https://www.github.com/mabry1985\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <h3 className=\"links github\">Github</h3>\n            </a>\n            <a\n              href=\"https://www.linkedin.com/in/mabry1985/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <h3 className=\"links linked-in\">Linked In</h3>\n            </a>\n            <a\n              href=\"https://www.codewars.com/users/mabry1985\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <h3 className=\"links codewars\">Codewars</h3>\n            </a>\n          </Container>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n}\n\nexport default About\n","import React, { useContext } from 'react'\n\nimport { VisibilityContext } from '../contexts/VisibilityContext';\nimport { WindowContext } from '../contexts/WindowContext';\n\nimport Projects from './projects/Projects';\nimport About from './About';\n\nconst MainContent = () => {\n  const { projectSelected } = useContext(VisibilityContext)\n  const { windowSize } = useContext(WindowContext);\n  const size = windowSize;\n  \n  return (\n    <div id=\"main-content\">\n      {projectSelected ? <Projects windowSize={size}/> : <About/>}\n    </div>\n  )\n}\n\nexport default MainContent\n","import React, { useContext } from 'react';\nimport { Grid, Container, Image, Header } from 'semantic-ui-react';\n\nimport { VisibilityContext } from '../contexts/VisibilityContext';\n\nimport headshot from '../assets/Headshot.png';\n\nconst LandingPage = () => {\n  const { handleProjectClick, handleAboutClick } = useContext(VisibilityContext);\n\n  return (\n    <React.Fragment>\n      <Grid stackable reversed=\"mobile\">\n        <Grid.Row>\n          <Grid.Column width={8}>\n            <div className=\"img-container\">\n              <Image className=\"headshot\" src={headshot} />\n            </div>\n          </Grid.Column>\n          <Grid.Column verticalAlign=\"middle\" textAlign=\"center\" width={8}>\n            <Container>\n              <Grid.Row>\n                <Header as=\"h1\" id=\"name\">\n                  Josh Mabry\n                </Header>\n                <Header as=\"h3\" id=\"subtitle\">\n                  Fullstack Web Developer\n                </Header>\n              </Grid.Row>\n              <Grid.Row only=\"computer tablet\" id=\"links-container\">\n                <Header\n                  as=\"h3\"\n                  className=\"lp-links projects-lp\"\n                  onClick={handleProjectClick}\n                >\n                  Projects\n                </Header>\n                <Header\n                  as=\"h3\"\n                  className=\"lp-links about-lp\"\n                  onClick={handleAboutClick}\n                >\n                  About\n                </Header>\n              </Grid.Row>\n            </Container>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default LandingPage\n","import React, { useState, useContext } from 'react';\nimport { Icon, Menu, Sidebar } from 'semantic-ui-react';\nimport { VisibilityContext } from '../../contexts/VisibilityContext';\nimport MainContent from '../MainContent';\nimport LandingPage from '../LandingPage';\n\nconst HamburgerMenu = () => {\n  const { navbarVisible, handleProjectClick, handleAboutClick, handleNavbarVisibility} = useContext(VisibilityContext)\n  const [visible, toggleVisible] = useState(false);\n\n  return (\n    <div>\n      <nav>\n        <Icon\n          id=\"hamburger-icon\"\n          name=\"sidebar\"\n          size=\"big\"\n          onClick={() => toggleVisible(true)}\n        />\n      </nav>\n\n      <Sidebar.Pushable as=\"div\">\n        <Sidebar\n          className=\"hamburger-menu\"\n          as={Menu}\n          animation=\"overlay\"\n          icon=\"labeled\"\n          onHide={() => toggleVisible(false)}\n          vertical\n          direction=\"right\"\n          visible={visible}\n          width=\"thin\"\n        >\n          <Menu.Item as=\"a\" onClick={() => handleProjectClick()}>\n            <h3 className=\"hamburger-links\">Projects</h3>\n          </Menu.Item>\n          <Menu.Item as=\"a\" onClick={() => handleAboutClick()}>\n            <h3 className=\"hamburger-links\">About</h3>\n          </Menu.Item>\n          <Menu.Item\n            as=\"a\"\n            href=\"https://drive.google.com/file/d/15X8GmKS3durO2wB7yS5FmdBYmJld7srU/view?usp=sharing\"\n            target=\"_blank\"\n          >\n            <h3 className=\"hamburger-links\">Resume</h3>\n          </Menu.Item>\n          <Menu.Item\n            as=\"a\"\n            href=\"https://www.github.com/mabry1985\"\n            target=\"_blank\"\n          >\n            <h3 className=\"hamburger-links\">Github</h3>\n          </Menu.Item>\n          <Menu.Item\n            as=\"a\"\n            href='https://www.linkedin.com/in/mabry1985/'\n            target=\"_blank\"\n          >\n            <h3 className=\"hamburger-links\">LinkedIn</h3>\n          </Menu.Item>\n          <Menu.Item as=\"a\" onClick={() => handleNavbarVisibility()}>\n            <h3 className=\"hamburger-links\">Home</h3>\n          </Menu.Item>\n        </Sidebar>\n\n        <Sidebar.Pusher className=\"hamburger-container\" dimmed={visible}>\n          {navbarVisible ? <LandingPage /> : <MainContent />}\n        </Sidebar.Pusher>\n      </Sidebar.Pushable>\n    </div>\n  );\n}\n\nexport default HamburgerMenu\n","import React, { useContext } from 'react';\nimport NavBar from './NavBar';\nimport { WindowContext } from '../../contexts/WindowContext';\nimport HamburgerMenu from './HamburgerMenu';\n\nconst ResponsiveNav = () => {\n  const { windowSize } = useContext(WindowContext);\n  \n  const nav = windowSize.width > 500 ? <NavBar/> : <HamburgerMenu/>;\n\n  return (\n    <div>\n      {nav}\n    </div>\n  )\n}\n\nexport default ResponsiveNav\n\n","import React from 'react';\nimport { Header, Icon } from \"semantic-ui-react\";\n\nconst LandscapeMode = () => {\n\n  return (\n    <div id='rotate-phone'>\n      <Header icon>\n        <Icon name=\"sync alternate\" />\n          Please rotate your phone to continue.\n      </Header>\n    </div>\n  );\n}\n\nexport default LandscapeMode\n","import React, { useContext } from 'react';\n\nimport ResponsiveNav from './components/navigation/ResponsiveNav';\nimport LandingPage from './components/LandingPage';\nimport MainContent from './components/MainContent';\nimport LandscapeMode from './components/responsive/LandscapeMode';\n\nimport { VisibilityContext } from './contexts/VisibilityContext';\nimport { WindowContext } from './contexts/WindowContext';\nimport HamburgerMenu from './components/navigation/HamburgerMenu';\n\nconst App = () => {\n  const { navBarVisible } = useContext(VisibilityContext);\n  const { landscapeMode, windowSize } = useContext(WindowContext);\n  let content;\n\n  if (landscapeMode) {\n    content = <LandscapeMode/>\n  } else if (!landscapeMode && navBarVisible && windowSize.width > 766) {\n      content = (\n        <React.Fragment>\n          <ResponsiveNav/>\n          <MainContent/>\n        </React.Fragment>\n      )\n    } else if (!landscapeMode && navBarVisible && windowSize.width < 766) {\n        content = <HamburgerMenu/>\n    } else if (!landscapeMode) {\n        content = <LandingPage/>\n    }\n\n  return (\n    <div className=\"App\">\n      {content}\n    </div>\n  )\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport VisibilityContextProvider from './contexts/VisibilityContext';\nimport WindowContextProvider from './contexts/WindowContext';\n\nReactDOM.render(\n  <VisibilityContextProvider>\n    <WindowContextProvider>\n      <App /> \n    </WindowContextProvider>\n  </VisibilityContextProvider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}